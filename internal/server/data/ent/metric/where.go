// Code generated by ent, DO NOT EDIT.

package metric

import (
	"time"
	"wameter/internal/server/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.Metric {
	return predicate.Metric(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.Metric {
	return predicate.Metric(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.Metric {
	return predicate.Metric(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.Metric {
	return predicate.Metric(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.Metric {
	return predicate.Metric(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.Metric {
	return predicate.Metric(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.Metric {
	return predicate.Metric(sql.FieldLTE(FieldID, id))
}

// AgentID applies equality check predicate on the "agent_id" field. It's identical to AgentIDEQ.
func AgentID(v string) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldAgentID, v))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldTimestamp, v))
}

// CollectedAt applies equality check predicate on the "collected_at" field. It's identical to CollectedAtEQ.
func CollectedAt(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldCollectedAt, v))
}

// ReportedAt applies equality check predicate on the "reported_at" field. It's identical to ReportedAtEQ.
func ReportedAt(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldReportedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldCreatedAt, v))
}

// AgentIDEQ applies the EQ predicate on the "agent_id" field.
func AgentIDEQ(v string) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldAgentID, v))
}

// AgentIDNEQ applies the NEQ predicate on the "agent_id" field.
func AgentIDNEQ(v string) predicate.Metric {
	return predicate.Metric(sql.FieldNEQ(FieldAgentID, v))
}

// AgentIDIn applies the In predicate on the "agent_id" field.
func AgentIDIn(vs ...string) predicate.Metric {
	return predicate.Metric(sql.FieldIn(FieldAgentID, vs...))
}

// AgentIDNotIn applies the NotIn predicate on the "agent_id" field.
func AgentIDNotIn(vs ...string) predicate.Metric {
	return predicate.Metric(sql.FieldNotIn(FieldAgentID, vs...))
}

// AgentIDGT applies the GT predicate on the "agent_id" field.
func AgentIDGT(v string) predicate.Metric {
	return predicate.Metric(sql.FieldGT(FieldAgentID, v))
}

// AgentIDGTE applies the GTE predicate on the "agent_id" field.
func AgentIDGTE(v string) predicate.Metric {
	return predicate.Metric(sql.FieldGTE(FieldAgentID, v))
}

// AgentIDLT applies the LT predicate on the "agent_id" field.
func AgentIDLT(v string) predicate.Metric {
	return predicate.Metric(sql.FieldLT(FieldAgentID, v))
}

// AgentIDLTE applies the LTE predicate on the "agent_id" field.
func AgentIDLTE(v string) predicate.Metric {
	return predicate.Metric(sql.FieldLTE(FieldAgentID, v))
}

// AgentIDContains applies the Contains predicate on the "agent_id" field.
func AgentIDContains(v string) predicate.Metric {
	return predicate.Metric(sql.FieldContains(FieldAgentID, v))
}

// AgentIDHasPrefix applies the HasPrefix predicate on the "agent_id" field.
func AgentIDHasPrefix(v string) predicate.Metric {
	return predicate.Metric(sql.FieldHasPrefix(FieldAgentID, v))
}

// AgentIDHasSuffix applies the HasSuffix predicate on the "agent_id" field.
func AgentIDHasSuffix(v string) predicate.Metric {
	return predicate.Metric(sql.FieldHasSuffix(FieldAgentID, v))
}

// AgentIDEqualFold applies the EqualFold predicate on the "agent_id" field.
func AgentIDEqualFold(v string) predicate.Metric {
	return predicate.Metric(sql.FieldEqualFold(FieldAgentID, v))
}

// AgentIDContainsFold applies the ContainsFold predicate on the "agent_id" field.
func AgentIDContainsFold(v string) predicate.Metric {
	return predicate.Metric(sql.FieldContainsFold(FieldAgentID, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldLTE(FieldTimestamp, v))
}

// CollectedAtEQ applies the EQ predicate on the "collected_at" field.
func CollectedAtEQ(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldCollectedAt, v))
}

// CollectedAtNEQ applies the NEQ predicate on the "collected_at" field.
func CollectedAtNEQ(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldNEQ(FieldCollectedAt, v))
}

// CollectedAtIn applies the In predicate on the "collected_at" field.
func CollectedAtIn(vs ...time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldIn(FieldCollectedAt, vs...))
}

// CollectedAtNotIn applies the NotIn predicate on the "collected_at" field.
func CollectedAtNotIn(vs ...time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldNotIn(FieldCollectedAt, vs...))
}

// CollectedAtGT applies the GT predicate on the "collected_at" field.
func CollectedAtGT(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldGT(FieldCollectedAt, v))
}

// CollectedAtGTE applies the GTE predicate on the "collected_at" field.
func CollectedAtGTE(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldGTE(FieldCollectedAt, v))
}

// CollectedAtLT applies the LT predicate on the "collected_at" field.
func CollectedAtLT(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldLT(FieldCollectedAt, v))
}

// CollectedAtLTE applies the LTE predicate on the "collected_at" field.
func CollectedAtLTE(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldLTE(FieldCollectedAt, v))
}

// ReportedAtEQ applies the EQ predicate on the "reported_at" field.
func ReportedAtEQ(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldReportedAt, v))
}

// ReportedAtNEQ applies the NEQ predicate on the "reported_at" field.
func ReportedAtNEQ(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldNEQ(FieldReportedAt, v))
}

// ReportedAtIn applies the In predicate on the "reported_at" field.
func ReportedAtIn(vs ...time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldIn(FieldReportedAt, vs...))
}

// ReportedAtNotIn applies the NotIn predicate on the "reported_at" field.
func ReportedAtNotIn(vs ...time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldNotIn(FieldReportedAt, vs...))
}

// ReportedAtGT applies the GT predicate on the "reported_at" field.
func ReportedAtGT(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldGT(FieldReportedAt, v))
}

// ReportedAtGTE applies the GTE predicate on the "reported_at" field.
func ReportedAtGTE(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldGTE(FieldReportedAt, v))
}

// ReportedAtLT applies the LT predicate on the "reported_at" field.
func ReportedAtLT(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldLT(FieldReportedAt, v))
}

// ReportedAtLTE applies the LTE predicate on the "reported_at" field.
func ReportedAtLTE(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldLTE(FieldReportedAt, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Metric {
	return predicate.Metric(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Metric) predicate.Metric {
	return predicate.Metric(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Metric) predicate.Metric {
	return predicate.Metric(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Metric) predicate.Metric {
	return predicate.Metric(sql.NotPredicates(p))
}
