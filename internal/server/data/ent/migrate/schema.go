// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AgentsColumns holds the columns for the "agents" table.
	AgentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "hostname", Type: field.TypeString},
		{Name: "version", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
		{Name: "last_seen", Type: field.TypeTime},
		{Name: "registered_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AgentsTable holds the schema information for the "agents" table.
	AgentsTable = &schema.Table{
		Name:       "agents",
		Columns:    AgentsColumns,
		PrimaryKey: []*schema.Column{AgentsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "agent_status",
				Unique:  false,
				Columns: []*schema.Column{AgentsColumns[3]},
			},
			{
				Name:    "agent_last_seen",
				Unique:  false,
				Columns: []*schema.Column{AgentsColumns[4]},
			},
		},
	}
	// IPChangesColumns holds the columns for the "ip_changes" table.
	IPChangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "agent_id", Type: field.TypeString},
		{Name: "interface_name", Type: field.TypeString, Nullable: true},
		{Name: "version", Type: field.TypeString},
		{Name: "is_external", Type: field.TypeBool},
		{Name: "old_addrs", Type: field.TypeJSON, Nullable: true},
		{Name: "new_addrs", Type: field.TypeJSON, Nullable: true},
		{Name: "action", Type: field.TypeString},
		{Name: "reason", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// IPChangesTable holds the schema information for the "ip_changes" table.
	IPChangesTable = &schema.Table{
		Name:       "ip_changes",
		Columns:    IPChangesColumns,
		PrimaryKey: []*schema.Column{IPChangesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "ipchange_agent_id_timestamp",
				Unique:  false,
				Columns: []*schema.Column{IPChangesColumns[1], IPChangesColumns[9]},
			},
			{
				Name:    "ipchange_interface_name",
				Unique:  false,
				Columns: []*schema.Column{IPChangesColumns[2]},
			},
			{
				Name:    "ipchange_created_at",
				Unique:  false,
				Columns: []*schema.Column{IPChangesColumns[10]},
			},
		},
	}
	// MetricsColumns holds the columns for the "metrics" table.
	MetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "agent_id", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "collected_at", Type: field.TypeTime},
		{Name: "reported_at", Type: field.TypeTime},
		{Name: "data", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
	}
	// MetricsTable holds the schema information for the "metrics" table.
	MetricsTable = &schema.Table{
		Name:       "metrics",
		Columns:    MetricsColumns,
		PrimaryKey: []*schema.Column{MetricsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "metric_agent_id_timestamp",
				Unique:  false,
				Columns: []*schema.Column{MetricsColumns[1], MetricsColumns[2]},
			},
			{
				Name:    "metric_collected_at",
				Unique:  false,
				Columns: []*schema.Column{MetricsColumns[3]},
			},
			{
				Name:    "metric_reported_at",
				Unique:  false,
				Columns: []*schema.Column{MetricsColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AgentsTable,
		IPChangesTable,
		MetricsTable,
	}
)

func init() {
}
